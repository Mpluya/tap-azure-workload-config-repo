apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-ca-cert-workload
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: go-ca-cert-workload
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: go-ca-cert-workload
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: go-ca-cert-workload
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: go-ca-cert-workload
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/Mpluya/Mpluya-go-ca-cert-workload?sub_path=/
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/is-native-app-check
          spring-boot-convention/is-prometheus-enabled-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: go-ca-cert-workload
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: go-ca-cert-workload
    spec:
      containers:
      - image: cxscssa.azurecr.io/tap-build/workloads/go-ca-cert-workload-mae@sha256:9d65f1c89e7e8d3f408c7a3922e89c458f6127fc52d1fa412b60f63d265b6b98
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: go-ca-cert-workload
  labels:
    app.kubernetes.io/part-of: go-ca-cert-workload
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: go-ca-cert-workload
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: go-ca-cert-workload
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: go-ca-cert-workload
  ports:
  - targetPort: 8080
    port: 8080
    name: http

